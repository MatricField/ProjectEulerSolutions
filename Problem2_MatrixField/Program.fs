//https://projecteuler.net/problem=2

(*
 *Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *)

let MAX = 4000000I

module Method1 =
    let rec fib = function
        |n when n = 0I -> 0I
        |n when n = 1I -> 1I
        |n -> fib(n-1I) + fib(n-2I)

module Method2 = 
    let fib x =
        let rec func prev1 prev2 = function
            |n when n = 0I -> prev1
            |n -> func prev2 (prev1 + prev2) (n - 1I)
        func 0I 1I x

[<EntryPoint>]
let main argv = 
    printfn "%A" argv
    0 // return an integer exit code
